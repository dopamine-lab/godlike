<?php

//
// Standard time/date methods overridden to make them seedable.

class FakeTime {
    /** @var int */
    private static $seconds;
    
    /** @var int */
    private static $milliseconds;
    
    /** @var int */
    private static $microseconds;
    
    /**
     * @param int  $microseconds
     * @param bool $requestTime
     */
    public static function set(int $microseconds, bool $requestTime = false): void {
        self::$microseconds = $microseconds;
        self::$milliseconds = (int) bcdiv($microseconds, '1000', 0);
        self::$seconds = (int) bcdiv($microseconds, '1000000', 0);
        
        if ($requestTime) $_SERVER['REQUEST_TIME'] = self::$seconds;
    }
    
    public static function get(int $type = 0): int {
        if ($type === 2) return self::$microseconds;
        if ($type === 1) return self::$milliseconds;
        return self::$seconds;
    }
}


if (function_exists('time')) return;


function time() {return FakeTime::get(0);}
function mktime($hour = null, $minute = null, $second = null, $month = null, $day = null, $year = null, $is_dst = -1) {}
function gmmktime($hour = null, $minute = null, $second = null, $month = null, $day = null, $year = null, $is_dst = -1) {}
function date($format, $timestamp = null) {}
function gmdate($format, $timestamp = null) {}
function idate($format, $timestamp = null) {}
function getdate($timestamp = null) {}
function localtime($timestamp = null, $is_associative = null) {}
function strtotime($time, $now = 'now') {}
function strftime($format, $timestamp = null) {}
function gmstrftime($format, $timestamp = null) {}
function date_create($time = null, DateTimeZone $timezone = null) {}
function date_create_from_format($format, $time, $timezone = null) {}
function date_create_immutable($time = null, DateTimeZone $timezone = null) {}
function date_create_immutable_from_format($format, $time, DateTimeZone $timezone = null) {}
function microtime($get_as_float = null) {}
function gettimeofday($return_float = null) {}
function unixtojd($timestamp = 0) {}

class DateTime extends DateTime_original {
    public static function createFromFormat($format, $time, DateTimeZone $timezone = null) {
        parent::createFromFormat($format, $time, $timezone); // TODO: Change the autogenerated stub
    }
    
    public function __construct(string $time = 'now', DateTimeZone $timezone = null) { parent::__construct($time, $timezone); }
    
}

class DateTimeImmutable extends DateTimeImmutable_original {
    public static function createFromFormat($format, $time, DateTimeZone $timezone = null) {
        parent::createFromFormat($format, $time, $timezone); // TODO: Change the autogenerated stub
    }
    
    public function __construct(string $time = "now", ?DateTimeZone $timezone = null) { parent::__construct($time, $timezone); }
}


//_SERVER['REQUEST_TIME']